# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-02-22 13:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('people', '0001_initial'),
        ('movies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LinkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('title_he', models.CharField(max_length=300)),
                ('title_en', models.CharField(max_length=300)),
                ('slug', models.SlugField(unique=True)),
                ('description_he', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(default=100)),
                ('title_required', models.BooleanField()),
                ('for_movies', models.BooleanField()),
                ('for_people', models.BooleanField()),
                ('wikidata_id', models.CharField(blank=True, max_length=50, null=True)),
                ('template', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MovieLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('value', models.CharField(max_length=400)),
                ('title_he', models.CharField(blank=True, max_length=300, null=True)),
                ('title_en', models.CharField(blank=True, max_length=300, null=True)),
                ('notes_he', models.TextField(blank=True, null=True)),
                ('notes_en', models.TextField(blank=True, null=True)),
                ('language', models.IntegerField(blank=True, choices=[(1, 'Hebrew'), (2, 'English')], null=True)),
                ('limit_to_language', models.BooleanField(default=False)),
                ('editing_comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='movies.Movie')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movielinks', to='links.LinkType')),
            ],
        ),
        migrations.CreateModel(
            name='PersonLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('value', models.CharField(max_length=400)),
                ('title_he', models.CharField(blank=True, max_length=300, null=True)),
                ('title_en', models.CharField(blank=True, max_length=300, null=True)),
                ('notes_he', models.TextField(blank=True, null=True)),
                ('notes_en', models.TextField(blank=True, null=True)),
                ('language', models.IntegerField(blank=True, choices=[(1, 'Hebrew'), (2, 'English')], null=True)),
                ('limit_to_language', models.BooleanField(default=False)),
                ('editing_comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='people.Person')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personlinks', to='links.LinkType')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='personlink',
            unique_together=set([('parent', 'type', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='movielink',
            unique_together=set([('parent', 'type', 'value')]),
        ),
    ]
